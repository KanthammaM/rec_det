/**
 * This code was generated by Builder.io.
 */
import { ComponentFixture, TestBed } from "@angular/core/testing";
import { ReceiverDetailsComponent } from "./receiver-details.component";
import { HeaderComponent } from "./header/header.component";
import { UserInfoComponent } from "./user-info/user-info.component";
import { ProgressBarComponent } from "./progress-bar/progress-bar.component";
import { ReceiverFormComponent } from "./receiver-form/receiver-form.component";
import { SummaryComponent } from "./summary/summary.component";
import { ReactiveFormsModule } from "@angular/forms";

describe("ReceiverDetailsComponent", () => {
  let component: ReceiverDetailsComponent;
  let fixture: ComponentFixture<ReceiverDetailsComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      declarations: [
        ReceiverDetailsComponent,
        HeaderComponent,
        UserInfoComponent,
        ProgressBarComponent,
        ReceiverFormComponent,
        SummaryComponent,
      ],
      imports: [ReactiveFormsModule],
    }).compileComponents();
  });

  beforeEach(() => {
    fixture = TestBed.createComponent(ReceiverDetailsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it("should create", () => {
    expect(component).toBeTruthy();
  });

  it("should have correct initial values", () => {
    expect(component.currentStep).toBe(3);
    expect(component.totalSteps).toBe(7);
  });

  it("should render all child components", () => {
    const compiled = fixture.nativeElement;
    expect(compiled.querySelector("app-header")).toBeTruthy();
    expect(compiled.querySelector("app-user-info")).toBeTruthy();
    expect(compiled.querySelector("app-progress-bar")).toBeTruthy();
    expect(compiled.querySelector("app-receiver-form")).toBeTruthy();
    expect(compiled.querySelector("app-summary")).toBeTruthy();
  });

  it("should have back and continue buttons", () => {
    const compiled = fixture.nativeElement;
    expect(compiled.querySelector(".back-button")).toBeTruthy();
    expect(compiled.querySelector(".continue-button")).toBeTruthy();
  });
});
